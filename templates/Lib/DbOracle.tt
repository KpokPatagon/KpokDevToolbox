<#@ assembly name="netstandard.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="KpokEntityTool.Models" #>
<#+
    // retuns a column definition text.
    protected virtual string BuildColumn(Column column)
    {
        string col;
        col = "\"" + column.Name + "\"";
        col += " " + ToDbDataType(column.DataType);

        if (column.DataType == DataType.Decimal)
        {
            if (!string.IsNullOrWhiteSpace(column.Precision))
            {
                col += "(" + column.Precision;
                if (!string.IsNullOrWhiteSpace(column.Scale))
                {
                    col += ", " + column.Scale;
                }
                col += ")";
            }
        }

        if (column.DataType == DataType.NText || column.DataType == DataType.Text)
        {
            if (!string.IsNullOrWhiteSpace(column.CharacterLength))
            {
                col += "(" + column.CharacterLength + ")";
            }
            else col += "(50)";
        }

        if (!string.IsNullOrWhiteSpace(column.DefaultConstraintExpression))
        {
            col += " DEFAULT " + column.DefaultConstraintExpression;
        }

        col += " " + (column.IsNullable ? "NULL" : "NOT NULL");

        return col;
    }

    // returns the database type for the specified DataType.
    protected virtual string ToDbDataType(DataType dataType)
    {
        switch (dataType)
        {
        case DataType.BigInt:     return "NUMBER(21)";
        case DataType.Blob:       return "BLOB";
        case DataType.Boolean:    return "NUMBER(1)";
        case DataType.Clob:       return "CLOB";
        case DataType.DateTime:   return "DATE";
        case DataType.Decimal:    return "NUMBER";
        case DataType.Float:      return "FLOAT";
        case DataType.Guid:       return "VARCHAR2(50)";
        case DataType.Integer:    return "NUMBER(11)";
        case DataType.NClob:      return "NCLOB";
        case DataType.NText:      return "NVARCHAR2";
        case DataType.SmallInt:   return "NUMBER(6)";
        case DataType.Text:       return "VARCHAR2";
		case DataType.TimeSpan:   return "NUMBER(21)";
        case DataType.TinyInt:    return "NUMBER(1)";
        default:
            return "VARCHAR2";
        }
    }
    
#>
